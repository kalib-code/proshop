{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {}\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/karlalibuas/Playground/react/proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAGJ,kBADc;AAE5BK,EAAAA,cAAc,EAAGJ,qBAFW;AAG5BK,EAAAA,IAAI,EAAEJ;AAHsB,CAAD,CAA/B;AAMA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAmCC,IAAI,CAACC,KAAL,CAC/DH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAD+D,CAAnC,GACS,EADtC;AAGA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAC;AADY,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CAACQ,OAAD,EAAWS,YAAX,EAA0Bb,mBAAmB,CACjEF,eAAe,CAAC,GAAGgB,UAAJ,CADkD,CAA7C,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\n\nconst reducer = combineReducers({\n    productList : productListReducer,\n    productDetails : productDetailsReducer,\n    cart: cartReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?JSON.parse\n(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    cart:{}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer , initialState , composeWithDevTools\n    (applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}